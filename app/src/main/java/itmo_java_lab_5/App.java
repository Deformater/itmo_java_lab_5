/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package itmo_java_lab_5;

import commands.complex_args_commands.Add;
import commands.complex_args_commands.AddIfMin;
import commands.complex_args_commands.FilterLessThenHouse;
import commands.complex_args_commands.RemoveLower;
import commands.complex_args_commands.Update;
import commands.no_args_commands.Clear;
import commands.no_args_commands.Exit;
import commands.no_args_commands.Help;
import commands.no_args_commands.History;
import commands.no_args_commands.Info;
import commands.no_args_commands.MaxByArea;
import commands.no_args_commands.PrintFieldDescendingHouse;
import commands.no_args_commands.Save;
import commands.no_args_commands.Show;
import commands.simple_args_commands.ExecuteScript;
import commands.simple_args_commands.RemoveById;
import manager.CollectionManager;
import manager.CommandManager;
import manager.ConsoleManager;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        CommandManager commandManager = new CommandManager();
        ConsoleManager consoleManager = new ConsoleManager(commandManager);
        CollectionManager collectionManager = new CollectionManager();
        Add addCommand = new Add(consoleManager, collectionManager);
        commandManager.register(addCommand);
        History historyCommand = new History(consoleManager, collectionManager);
        commandManager.register(historyCommand);
        Help helpCommand = new Help(consoleManager, collectionManager);
        commandManager.register(helpCommand);
        Info infoCommand = new Info(consoleManager, collectionManager);
        commandManager.register(infoCommand);
        Show showCommand = new Show(consoleManager, collectionManager);
        commandManager.register(showCommand);
        Update updateCommand = new Update(consoleManager, collectionManager);
        commandManager.register(updateCommand);
        RemoveById removeByIdCommand = new RemoveById(consoleManager, collectionManager);
        commandManager.register(removeByIdCommand);
        Clear clearCommand = new Clear(consoleManager, collectionManager);
        commandManager.register(clearCommand);
        Save saveCommand = new Save(consoleManager, collectionManager);
        commandManager.register(saveCommand);
        ExecuteScript executeScriptCommand = new ExecuteScript(consoleManager, collectionManager);
        commandManager.register(executeScriptCommand);
        AddIfMin addIfMinCommand = new AddIfMin(consoleManager, collectionManager);
        commandManager.register(addIfMinCommand);
        RemoveLower removeLowerCommand = new RemoveLower(consoleManager, collectionManager);
        commandManager.register(removeLowerCommand);
        FilterLessThenHouse filterLessThenHouseCommand = new FilterLessThenHouse(consoleManager, collectionManager);
        commandManager.register(filterLessThenHouseCommand);
        MaxByArea maxByAreaCommand = new MaxByArea(consoleManager, collectionManager);
        commandManager.register(maxByAreaCommand);
        PrintFieldDescendingHouse printFieldDescendingHouseCommand = new PrintFieldDescendingHouse(consoleManager,
                collectionManager);
        commandManager.register(printFieldDescendingHouseCommand);
        Exit exitCommand = new Exit(consoleManager, collectionManager);
        commandManager.register(exitCommand);

        consoleManager.run();
    }
}
